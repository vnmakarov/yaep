#
#   FILE NAME:   Makefile
#
#   TITLE:       Makefile for work with YAEP (Yet Another Earley Parser)
#
#   Copyright (C) 2015 Vladimir Makarov.
#
#   Written by Vladimir Makarov <vmakarov@gcc.gnu.org>
#
#   This is part of YAEP; you can redistribute it and/or
#   modify it under the terms of the GNU Library General Public License
#   as published by the Free Software Foundation; either version 2, or
#   (at your option) any later version.
#
#   This software is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#   Library General Public License for more details.
#
#   You should have received a copy of the GNU Library General Public
#   License along with GNU CC; see the file COPYING.  If not, write to
#   the Free Software Foundation, 59 Temple Place - Suite 330, Boston,
#   MA 02111-1307, USA.
#
#   SPECIAL CONSIDERATION: Following makefile macro can be redefined
#        on make command line:
#            distdir      the subdirectory used for creation of compressed
#                         distribution tar file
#            prefix       common prefix for installation directories
#            exec_prefix  common prefix for binary installation directories
#            libdir       the directory used for installation of the library
#            includedir   the directory used for installation header files
#            INSTALL      utility used fort installing executables
#            INSTALLDATA  utility used fort installing nonexecutables
#            AWK          utility used instead of POSIX utility `awk'
#            SED          utility used instead of POSIX utility `sed'
#            ETAGS        utility used for creation of reusable packages tag
#                         table
#            CC           used C compiler
#            CFLAGS       C compiler flags
#            CXX          used C++ compiler
#            CXXFLAGS     C++ compiler flags
#            RANLIB       utility for conversion of archives to random
#                         libraries
#            AR           utility for creation of archives
#
#   MAKEFILE ENTRIES:
#            all (default)   create all object files
#            test            test YAEP
#            install         create and install the library of reusable
#                            functions, header files, and its man pages
#            uninstall       delete the installed file
#            clean           delete all object files
#            realclean       delete all which can be built up automatically
#            distclean       delete all not needed for distribution
#            TAGS            updating TAGS table for the packages sources
#            dist-copy       copying distribution files into `distdir'
#            dist            unconditional creation of compressed
#                            distribution tar file
#

SHELL=/bin/sh

# The subdirectory used for copying sources and creation of
# compressed distribution tar file.
distdir = yaep-0.997

# Additional prefix used to install YAEP temporarily.  It is
# necessary only for RPM.
DESTDIR=

# Common prefix for installation directories.
# NOTE: this directory must exist when you start installation.
prefix=@prefix@

# Common prefix for binary installation directories.
# NOTE: this directory must exist when you start installation.
exec_prefix=@exec_prefix@

# The directory for installation of the library.
libdir=@libdir@

# The directory for installation of header files.
includedir=@includedir@/yaep

# The directory for installation of documentation
docdir=@docdir@/yaep

# Utility for installing executables.
INSTALL=@INSTALL@

# Utility for installing nonexecutables.
INSTALLDATA=@INSTALL_DATA@

# Utility used instead of POSIX utility `awk'.
AWK=@AWK@

# Utility used instead of POSIX utility `sed'.
SED=sed

# Utility for creation of reusable packages tag table.
ETAGS=etags

# Obligatory compiler options
OPTIONS=@DEFS@ -I.. -I. -I$(srcdir)

# C compiler and its flag used for compilation of C files.
CC = @CC@
CFLAGS = @CFLAGS@ $(OPTIONS) @C_DEBUG_DEFINE@ @GCC_FPIC@

# C++ compiler and its flag used for compilation of C++ files.
CXX = @CXX@
CXXFLAGS = @CXXFLAGS@ $(OPTIONS) @C_DEBUG_DEFINE@

# Yacc
YACC=@YACC@

# Utility for conversion of archives to random libraries.
RANLIB=@RANLIB@

# Utility for creation of archives.
AR=ar

# RCS utility
RCS=rcs

# Undefined value for marking a release.
RCSLABEL=

# Directory for C object file
Cdir=C

# Directory for C++ object file
Cxxdir=C++

# Supporting possibility build directories

srcdir = @srcdir@

top_srcdir = @top_srcdir@

# All hand written source files of the packages.
source = $(srcdir)/allocate.h $(srcdir)/allocate.c $(srcdir)/allocate.cpp\
	 $(srcdir)/vlobject.h $(srcdir)/vlobject.c $(srcdir)/vlobject.cpp\
         $(srcdir)/objstack.h $(srcdir)/objstack.c $(srcdir)/objstack.cpp\
	 $(srcdir)/hashtab.h $(srcdir)/hashtab.c $(srcdir)/hashtab.cpp\
         $(srcdir)/ticker.h $(srcdir)/ticker.c $(srcdir)/ticker.cpp\
         $(srcdir)/yaep.h $(srcdir)/yaep.c $(srcdir)/sgramm.y\
	 $(srcdir)/yaep.tst.in $(srcdir)/yaep.cpp $(srcdir)/yaep++.tst.in\
         $(srcdir)/cocom-config.h.in $(srcdir)/cocom-config.h.bot\
         $(srcdir)/cocom-config.h.top $(srcdir)/Makefile.in

additional_files = README INSTALL

doc_files = yaep.txt yaep.info* yaep.html yaep-*.html\
            yaep.pdf yaep.dvi yaep.ps\
            yaep++.txt yaep++.info* yaep++.html yaep++-*.html\
            yaep++.pdf yaep++.dvi yaep++.ps

# Files which are not in distribution
additional_rcs_files = yaep.sgml.in yaep_part.sgml.in\
                       yaep++.sgml.in yaep_part++.sgml.in

# All C object files
Cobjects = $(Cdir)/allocate.o  $(Cdir)/vlobject.o  $(Cdir)/objstack.o\
           $(Cdir)/hashtab.o $(Cdir)/ticker.o $(Cdir)/yaep.o

# All C++ object files
Cppobjects = $(Cxxdir)/allocate.o  $(Cxxdir)/vlobject.o  $(Cxxdir)/objstack.o\
             $(Cxxdir)/hashtab.o $(Cxxdir)/ticker.o $(Cxxdir)/yaep.o

# C Library
Clibrary = libyaep.a

# C++ Library
Cpplibrary = libyaep++.a

# Default entry
all: $(Cdir)  $(Cxxdir)  $(Clibrary)  $(Cpplibrary)

$(Cdir):
	-mkdir $(Cdir)

$(Cxxdir):
	-mkdir $(Cxxdir)

$(Clibrary): $(Cobjects)
	rm -f $(Clibrary)
	$(AR) rc $(Clibrary) $(Cobjects)
	$(RANLIB) $(Clibrary)

$(Cpplibrary): $(Cppobjects)
	rm -f $(Cpplibrary)
	$(AR) rc $(Cpplibrary) $(Cppobjects)
	$(RANLIB) $(Cpplibrary)

sgramm.c: $(srcdir)/sgramm.y
	$(YACC) $(srcdir)/sgramm.y
	mv y.tab.c $@

# Test the packages.
test: test-c test-cpp test-speed

test-c: yaep-tst
yaep-tst:
	$(SHELL) yaep.tst

test-cpp: yaepcpp-tst
yaepcpp-tst:
	$(SHELL) yaep++.tst

test-speed:
	$(SHELL) compare_parsers.tst

# Creation of installation directories and the library of reusable
# functions, header files, and their man files to target directories.
install: all
	-mkdir -p $(DESTDIR)/$(libdir)
	$(INSTALLDATA) $(Clibrary) $(DESTDIR)/$(libdir)/$(Clibrary)
	$(INSTALLDATA) $(Cpplibrary) $(DESTDIR)/$(libdir)/$(Cpplibrary)
	-mkdir -p $(DESTDIR)/$(includedir)
	$(INSTALLDATA) cocom-config.h $(DESTDIR)/$(includedir)/cocom-config.h
	$(INSTALLDATA) $(srcdir)/allocate.h $(DESTDIR)/$(includedir)/allocate.h
	$(INSTALLDATA) $(srcdir)/yaep.h $(DESTDIR)/$(includedir)/yaep.h
	-mkdir -p $(DESTDIR)/$(docdir)
	$(INSTALLDATA) $(srcdir)/yaep.txt $(srcdir)/yaep.html  $(srcdir)/yaep-*.html\
          $(srcdir)/yaep.info* $(srcdir)/yaep.pdf\
          $(srcdir)/yaep.dvi $(srcdir)/yaep.ps\
          $(srcdir)/yaep++.txt $(srcdir)/yaep++.html $(srcdir)/yaep++-*.html\
          $(srcdir)/yaep++.info* $(srcdir)/yaep++.pdf\
          $(srcdir)/yaep++.dvi $(srcdir)/yaep++.ps\
          $(DESTDIR)/$(docdir)

# Delete the installed files and the installation directories.
uninstall:
	rm -f $(DESTDIR)/$(libdir)/$(Clibrary)
	rm -f $(DESTDIR)/$(libdir)/$(Cpplibrary)
	-rmdir $(DESTDIR)/$(libdir)
	rm -f $(DESTDIR)/$(includedir)/cocom-config.h
	rm -f $(DESTDIR)/$(includedir)/allocate.h
	rm -f $(DESTDIR)/$(includedir)/yaep.h
	-rmdir $(DESTDIR)/$(includedir)
	rm -f $(DESTDIR)/$(docdir)/yaep.txt \
          $(DESTDIR)/$(docdir)/yaep.html\
          $(DESTDIR)/$(docdir)/yaep-*.html\
          $(DESTDIR)/$(docdir)/yaep.info*\
          $(DESTDIR)/$(docdir)/yaep.pdf\
          $(DESTDIR)/$(docdir)/yaep.dvi\
          $(DESTDIR)/$(docdir)/yaep.ps\
          $(DESTDIR)/$(docdir)/yaep++.txt\
          $(DESTDIR)/$(docdir)/yaep++.html\
          $(DESTDIR)/$(docdir)/yaep++-*.html\
          $(DESTDIR)/$(docdir)/yaep++.info*\
          $(DESTDIR)/$(docdir)/yaep++.pdf\
          $(DESTDIR)/$(docdir)/yaep++.dvi\
          $(DESTDIR)/$(docdir)/yaep++.ps
	-rmdir $(DESTDIR)/$(docdir)

# Delete all temporary files and the libraries.
clean:
	rm -f $(Cobjects) $(Clibrary) $(Cppobjects) $(Cpplibrary)
	-rmdir $(Cdir) $(Cxxdir)

# Delete all which can be built up automatically.
realclean: distclean
	rm -f TAGS

# Delete all not needed for distribution.
distclean: clean
	rm -f Makefile
	rm -f yaep.tst sgramm.c
	rm -f yaep++.tst
	rm -f yaep.sgml yaep.tex yaep.log\
              yaep.aux yaep.toc
	rm -f yaep++.sgml yaep++.tex yaep++.log\
	      yaep++.aux yaep++.toc\
              yaep.sgml yaep.tmp\
              yaep++.sgml yaep++.tmp

# Updating TAGS table for reusable packages sources.
TAGS : $(source)
	$(ETAGS) $(source)

# Ouput names of TAGS table for the reusable packages sources.
tagsout : $(source)
	for i in $(source);do\
	  echo `basename $$i`;\
	done

# Create empty subdirectory used for creation of compressed distribution
# tar file.
create-distdir:
	-mkdir $(distdir)
	rm -f -r $(distdir)/*
	mkdir $(distdir)/clibyaep
	mkdir $(distdir)/cpplibyaep

# Copying distribution files into `distdir'.
dist-copy: create-distdir doc
	for i in $(additional_files);do cp $(srcdir)/$$i $(distdir);done
	for i in $(doc_files);do cp $(srcdir)/$$i $(distdir);done
	chmod -R +w $(distdir)

# Label RCS files.
rcslabel:
	@if test x$(RCSLABEL) = x; then echo undefined RCSLABEL; exit 1; fi
	for i in $(source);do $(RCS) -n$(RCSLABEL) $$i;done
	for i in $(additional_files);do $(RCS) -n$(RCSLABEL) $(srcdir)/$$i;done
	for i in $(additional_rcs_files);do $(RCS) -n$(RCSLABEL) $(srcdir)/$$i;done

# Unconditional creation of compressed distribution tar file.
dist: dist-copy
	tar cf -  $(distdir) | gzip -c >$(distdir).tar.gz

# Creation of documentation

doc : yaep.sgml yaep++.sgml\
      $(srcdir)/yaep.txt $(srcdir)/yaep.html\
      $(srcdir)/yaep.info $(srcdir)/yaep.pdf\
      $(srcdir)/yaep.dvi $(srcdir)/yaep.ps\
      $(srcdir)/yaep++.txt $(srcdir)/yaep++.html\
      $(srcdir)/yaep++.info $(srcdir)/yaep++.pdf\
      $(srcdir)/yaep++.dvi $(srcdir)/yaep++.ps

yaep.sgml: $(srcdir)/yaep.sgml.in $(srcdir)/yaep_part.sgml.in
	$(AWK) "{if(\$$0 == \"%%%\")\
                     {while ((getline line < \"$(srcdir)/yaep_part.sgml.in\") > 0)\
                        print line;close(\"$(srcdir)/yaep_part.sgml.in\")}\
                 else print;}" $(srcdir)/yaep.sgml.in > $@

$(srcdir)/yaep.txt: yaep.sgml
	linuxdoc -B txt --papersize=letter -f yaep.sgml
	mv yaep.txt $(srcdir)

$(srcdir)/yaep.html: yaep.sgml
	linuxdoc -B html --papersize=letter yaep.sgml
	if test -f yaep-1.html;then\
  	  for i in yaep-*.html;do\
   	    mv $$i $(srcdir)/$$i;\
	  done;\
        fi
	mv yaep.html $(srcdir)/yaep.html

$(srcdir)/yaep.info: yaep.sgml
	linuxdoc -B info --papersize=letter yaep.sgml
	if test -f yaep.info;then\
	  for i in yaep.info*;do\
   	    mv $$i $(srcdir)/$$i;\
	  done;\
        fi

$(srcdir)/yaep.dvi: yaep.sgml
	linuxdoc -B latex --papersize=letter yaep.sgml
	if test ! -f yaep.dvi\
           -o -f yaep.tex -a yaep.tex -nt yaep.dvi; then\
    	        latex yaep.tex; latex yaep.tex;\
        fi
	mv yaep.dvi $(srcdir)/yaep.dvi

$(srcdir)/yaep.ps: $(srcdir)/yaep.dvi
	dvips -o $@ $(srcdir)/yaep.dvi

$(srcdir)/yaep.pdf: $(srcdir)/yaep.ps
	ps2pdf $(srcdir)/yaep.ps $@

yaep++.sgml: $(srcdir)/yaep++.sgml.in $(srcdir)/yaep_part++.sgml.in
	$(AWK) "{if(\$$0 == \"%%%\")\
                     {while ((getline line < \"$(srcdir)/yaep_part++.sgml.in\") > 0)\
                        print line;close(\"$(srcdir)/yaep_part++.sgml.in\")}\
                 else print;}" $(srcdir)/yaep++.sgml.in > $@

$(srcdir)/yaep++.txt: yaep++.sgml
	linuxdoc -B txt --papersize=letter -f yaep++.sgml
	mv yaep++.txt $(srcdir)

$(srcdir)/yaep++.html: yaep++.sgml
	linuxdoc -B html --papersize=letter yaep++.sgml
	if test -f yaep++-1.html;then\
  	  for i in yaep++-*.html;do\
   	    mv $$i $(srcdir)/$$i;\
	  done;\
        fi
	mv yaep++.html $(srcdir)/yaep++.html

$(srcdir)/yaep++.info: yaep++.sgml
	linuxdoc -B info --papersize=letter yaep++.sgml
	if test -f yaep++.info;then\
	  for i in yaep++.info*;do\
   	    mv $$i $(srcdir)/$$i;\
	  done;\
        fi

$(srcdir)/yaep++.dvi: yaep++.sgml
	linuxdoc -B latex --papersize=letter yaep++.sgml
	if test ! -f yaep++.dvi\
           -o -f yaep++.tex -a yaep++.tex -nt yaep++.dvi; then\
    	        latex yaep++.tex; latex yaep++.tex;\
        fi
	mv yaep++.dvi $(srcdir)/yaep++.dvi

$(srcdir)/yaep++.ps: $(srcdir)/yaep++.dvi
	dvips -o $@ $(srcdir)/yaep++.dvi

$(srcdir)/yaep++.pdf: $(srcdir)/yaep++.ps
	ps2pdf $(srcdir)/yaep++.ps $@

# The following entry is only for internal usage.  It adds makefile
# dependencies for IRDT object files to the end of given file.
depend : sgramm.c $(Cdir) $(Cxxdir)
	@echo ++++ Adding Makefile dependencies for C ++++
	echo '# The following is generated with the aid of Makefile entry depend' >>$(srcdir)/Makefile.in
	echo '#' >>$(srcdir)/Makefile.in
	$(SED) '/^# The following is generated with the aid of Makefile entry depend/,$$d' <$(srcdir)/Makefile.in >Makefile.tmp
	echo '# The following is generated with the aid of Makefile entry depend' >>Makefile.tmp
	echo '# Do not place anything below this line' >>Makefile.tmp
	echo '#' >>Makefile.tmp
	for i in allocate.c vlobject.c objstack.c hashtab.c ticker.c yaep.c;\
	do\
	   echo $(Cdir)/`gcc -MM -iquote -I$(srcdir)/../src $(CFLAGS) $(srcdir)/../src/$$i` | $(SED) 's/\\//g'\
                | $(SED) `echo 's%$(top_srcdir)/%$$(top_srcdir)/%g'\
                | $(SED) 's/\\./\\\\./g'` \
                | $(SED) 's% \./% %g'\
                | $(SED) 's%\$$(top_srcdir)/src/cocom-config\.h%../src/cocom-config.h%'\
                | $(SED) 's%\$$(top_srcdir)/src/sgramm\.c%sgramm.c%g' \
			 >>Makefile.tmp;\
	   echo '	$$(CC) -c $$(CFLAGS) -o $$@' $(srcdir)/../src/$$i \
                | $(SED) `echo 's%$(top_srcdir)/%$$(top_srcdir)/%g'\
                | $(SED) 's/\\./\\\\./g'` \
                | $(SED) 's% \./% %g' \
                | $(SED) 's%\$$(top_srcdir)/src/sgramm\.c%sgramm.c%g' \
                         >>Makefile.tmp;\
	done

	@echo ++++ Adding Makefile dependencies for C++ ++++
	for i in allocate.cpp vlobject.cpp objstack.cpp hashtab.cpp ticker.cpp yaep.cpp;\
	do\
	   echo $(Cxxdir)/`gcc -MM -iquote -I$(srcdir)/../src $(CFLAGS) $(srcdir)/../src/$$i` | $(SED) 's/\\//g'\
                | $(SED) `echo 's%$(top_srcdir)/%$$(top_srcdir)/%g'\
                | $(SED) 's/\\./\\\\./g'` \
                | $(SED) 's% \./% %g'\
                | $(SED) 's%\$$(top_srcdir)/src/cocom-config\.h%../src/cocom-config.h%'\
                | $(SED) 's%\$$(top_srcdir)/src/sgramm\.c%sgramm.c%g' \
			 >>Makefile.tmp;\
	   echo '	$$(CXX) -c $$(CXXFLAGS) -o $$@' $(srcdir)/../src/$$i \
                | $(SED) `echo 's%$(top_srcdir)/%$$(top_srcdir)/%g'\
                | $(SED) 's/\\./\\\\./g'` \
                | $(SED) 's% \./% %g'\
                | $(SED) 's%\$$(top_srcdir)/src/sgramm\.c%sgramm.c%g' \
			 >>Makefile.tmp;\
	done
	mv Makefile.tmp $(srcdir)/Makefile.in

#
# The following is generated with the aid of Makefile entry depend
# Do not place anything below this line
#
C/allocate.o: $(top_srcdir)/src/../src/allocate.c cocom-config.h  $(top_srcdir)/src/../src/allocate.h
	$(CC) -c $(CFLAGS) -o $@ $(top_srcdir)/src/../src/allocate.c
C/vlobject.o: $(top_srcdir)/src/../src/vlobject.c cocom-config.h  $(top_srcdir)/src/../src/allocate.h $(top_srcdir)/src/../src/vlobject.h
	$(CC) -c $(CFLAGS) -o $@ $(top_srcdir)/src/../src/vlobject.c
C/objstack.o: $(top_srcdir)/src/../src/objstack.c cocom-config.h  $(top_srcdir)/src/../src/allocate.h $(top_srcdir)/src/../src/objstack.h
	$(CC) -c $(CFLAGS) -o $@ $(top_srcdir)/src/../src/objstack.c
C/hashtab.o: $(top_srcdir)/src/../src/hashtab.c cocom-config.h  $(top_srcdir)/src/../src/allocate.h $(top_srcdir)/src/../src/hashtab.h
	$(CC) -c $(CFLAGS) -o $@ $(top_srcdir)/src/../src/hashtab.c
C/ticker.o: $(top_srcdir)/src/../src/ticker.c cocom-config.h  $(top_srcdir)/src/../src/ticker.h
	$(CC) -c $(CFLAGS) -o $@ $(top_srcdir)/src/../src/ticker.c
C/yaep.o: $(top_srcdir)/src/../src/yaep.c cocom-config.h  $(top_srcdir)/src/../src/allocate.h $(top_srcdir)/src/../src/hashtab.h  $(top_srcdir)/src/../src/vlobject.h $(top_srcdir)/src/../src/objstack.h  $(top_srcdir)/src/../src/yaep.h sgramm.c
	$(CC) -c $(CFLAGS) -o $@ $(top_srcdir)/src/../src/yaep.c
C++/allocate.o: $(top_srcdir)/src/../src/allocate.cpp cocom-config.h  $(top_srcdir)/src/../src/allocate.h
	$(CXX) -c $(CXXFLAGS) -o $@ $(top_srcdir)/src/../src/allocate.cpp
C++/vlobject.o: $(top_srcdir)/src/../src/vlobject.cpp cocom-config.h  $(top_srcdir)/src/../src/allocate.h $(top_srcdir)/src/../src/vlobject.h
	$(CXX) -c $(CXXFLAGS) -o $@ $(top_srcdir)/src/../src/vlobject.cpp
C++/objstack.o: $(top_srcdir)/src/../src/objstack.cpp cocom-config.h  $(top_srcdir)/src/../src/allocate.h $(top_srcdir)/src/../src/objstack.h
	$(CXX) -c $(CXXFLAGS) -o $@ $(top_srcdir)/src/../src/objstack.cpp
C++/hashtab.o: $(top_srcdir)/src/../src/hashtab.cpp cocom-config.h  $(top_srcdir)/src/../src/allocate.h $(top_srcdir)/src/../src/hashtab.h
	$(CXX) -c $(CXXFLAGS) -o $@ $(top_srcdir)/src/../src/hashtab.cpp
C++/ticker.o: $(top_srcdir)/src/../src/ticker.cpp cocom-config.h  $(top_srcdir)/src/../src/allocate.h $(top_srcdir)/src/../src/ticker.h
	$(CXX) -c $(CXXFLAGS) -o $@ $(top_srcdir)/src/../src/ticker.cpp
C++/yaep.o: $(top_srcdir)/src/../src/yaep.cpp $(top_srcdir)/src/../src/yaep.c  cocom-config.h $(top_srcdir)/src/../src/allocate.h  $(top_srcdir)/src/../src/hashtab.h $(top_srcdir)/src/../src/vlobject.h  $(top_srcdir)/src/../src/objstack.h $(top_srcdir)/src/../src/yaep.h sgramm.c
	$(CXX) -c $(CXXFLAGS) -o $@ $(top_srcdir)/src/../src/yaep.cpp
